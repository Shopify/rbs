#ifndef RBS__RUBY_OBJS_H
#define RBS__RUBY_OBJS_H

#include "ruby.h"

<%-
# This list contains the symbols in the order that they used to be defined in the C code.
# We'll temporarily rearrange our auto-generated code to match this order, to minimize the diff.
# It's temporary and will be removed in a follow-up PR.
ordered_function_names = [
  "rbs_alias",
  "rbs_ast_annotation",
  "rbs_ast_comment",
  "rbs_ast_type_param",
  "rbs_ast_decl_type_alias",
  "rbs_ast_decl_class_super",
  "rbs_ast_decl_class",
  "rbs_ast_decl_constant",
  "rbs_ast_decl_global",
  "rbs_ast_decl_interface",
  "rbs_ast_decl_module_self",
  "rbs_ast_decl_module",
  "rbs_ast_decl_module_alias",
  "rbs_ast_decl_class_alias",
  "rbs_ast_members_alias",
  "rbs_ast_members_attribute",
  "rbs_ast_members_method_definition",
  "rbs_ast_members_method_definition_overload",
  "rbs_ast_members_mixin",
  "rbs_ast_members_variable",
  "rbs_ast_members_visibility",
  "rbs_base_type",
  "rbs_block",
  "rbs_class_instance",
  "rbs_class_singleton",
  "rbs_function_param",
  "rbs_function",
  "rbs_untyped_function",
  "rbs_interface",
  "rbs_intersection",
  "rbs_literal",
  "rbs_method_type",
  "rbs_namespace",
  "rbs_optional",
  "rbs_proc",
  "rbs_record",
  "rbs_tuple",
  "rbs_type_name",
  "rbs_union",
  "rbs_variable",
  "rbs_ast_directives_use",
  "rbs_ast_directives_use_single_clause",
  "rbs_ast_directives_use_wildcard_clause",
]

nodes.sort_by { |node| ordered_function_names.index(node.c_function_name) || 999 }.each do |node| -%>
VALUE <%= node.c_function_name %>(<%= node.fields.map { |field| "#{field.c_type} #{field.c_name}" }.join(", ") %>);
<%- end -%>

#endif
